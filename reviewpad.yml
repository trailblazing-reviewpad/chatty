groups:
  - name: dependencies-bots
    description: "Bots that manage dependencies"
    spec: '["dependabot[bot]", "renovate[bot]", "engineeringalpha"]'

  - name: dependencies-managers
    description: "Managers of the project dependencies"
    spec: '["marcelosousa", "ferreiratiago"]'

  - name: high-risk-dependencies
    description: "High risk dependencies that require explicit approval"
    spec: '["openai"]'
  
  - name: go-dependency-file-extensions
    description: "Go dependencies file extensions"
    spec: '[".mod", ".sum"]'

workflows:
  - name: go-dependency-changes-policy
    run:
      - if: $containsOnlyFileExtensions($group("go-dependency-file-extensions"))
        then:
          - if: '!$any($group("high-risk-dependencies"), ($d: String => $containsCodePattern($d)))'
            then:
              - if: $getCheckRunConclusion("build") == "success"
                then:
                  - $review("APPROVE", "All requirements are met. Auto-merging.")
                  - $merge()
              - if: $getCheckRunConclusion("build") == "failure"
                then:
                  - $review("REQUEST_CHANGES", "The build is failing. Adding developer as assignee.")
                  - if: $isElementOf($getAuthor(), $group("dependencies-bots"))
                    then:
                      - $addAssignee($group("dependencies-managers"), 1)
            else:
              - $info("This PR contains high-risk dependencies. Adding reviewer for approval.")
              - $addReviewers($group("dependencies-managers"), 1)
        else:
          - $info("This PR contains changes to dependencies and other files. Adding reviewer for approval.")
          - $addReviewers($group("dependencies-managers"), 1)
